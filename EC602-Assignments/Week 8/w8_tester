#!/usr/bin/env python

# AUTHOR AnindyaPaul akpaul@bu.edu
# AUTHOR ShermanSze ysze@bu.edu
# AUTHOR DiWu wudi@bu.edu
# AUTHOR JianqingGao gaojq@bu.edu
# AUTHOR JiangyuWang jiangyu@bu.edu

import subprocess
import sys
import datetime
import random
import time
import operator

def parseList(s):
    commaSeparatedStrings = s[1:-1]
    numList = commaSeparatedStrings.split(',')
    return numList
    
def getRandomNumber(dtype):
    if(dtype == 'int'):
        return str(int(random.uniform(-100,100)))
        
    return str(random.uniform(-100,100))
    
def createFile(n, dtype):
    fileName = "w8_tester_matrix_" + n + "_" + datetime.datetime.strftime(datetime.datetime.now(), '%Y-%m-%d_%H_%M_%S') + ".txt"
    matrixSize = int(n)
    f = open(fileName, 'w')
    count = 0
    for i in range(matrixSize):
        for j in range(matrixSize):
            f.write(getRandomNumber(dtype))
            if(count%matrixSize == (matrixSize-1)):
                f.write('\n')
            else:
                f.write(' ')
            count+=1
    f.close()
    return fileName

    
def main():
    dtype = sys.argv[1]
    #dtype = 'int'
    if(dtype != 'int' and dtype != 'float'):
        exit(1)
    
    NListString = sys.argv[2]
    #NListString = '[5,10,100]'
    numList = parseList(NListString)
    
    Ntrials = sys.argv[3]
    #Ntrials = 3
    trials = int(Ntrials)
        
    subprocess.run(['g++', '-std=c++14', '-O1', 'w8c_multiply.cpp', '-o', 'w8c_multiply_1'],stdout=subprocess.PIPE)
    subprocess.run(['g++', '-std=c++14', '-O2', 'w8c_multiply.cpp', '-o', 'w8c_multiply_2'],stdout=subprocess.PIPE)
    subprocess.run(['g++', '-std=c++14', '-O3', 'w8c_multiply.cpp', '-o', 'w8c_multiply_3'],stdout=subprocess.PIPE)

    results = {}
    for num in numList:
        n = str(int(num))
        fileName = createFile(n, dtype)
        resultFileName = 'result_' + fileName
        
        py = o1 = o2 = o3 = 0
        avgPY = avgO1 = avgO2 = avgO3 = 0
        
        for trial in range(trials):
            t0=time.time()
            subprocess.run(['./w8c_multiply_1', dtype, n, fileName, fileName, resultFileName],stdout=subprocess.PIPE)
            t1=time.time()
            subprocess.run(['./w8c_multiply_2', dtype, n, fileName, fileName, resultFileName],stdout=subprocess.PIPE)
            t2=time.time()
            subprocess.run(['./w8c_multiply_3', dtype, n, fileName, fileName, resultFileName],stdout=subprocess.PIPE)
            t3=time.time()
            subprocess.run(['./w8p_multiply', dtype, n, fileName, fileName, resultFileName],stdout=subprocess.PIPE)
            t4=time.time()
            
            o1 += (t1-t0)
            o2 += (t2-t1)
            o3 += (t3-t2)
            py += (t4-t3)
            
        avgO1 = (o1/trials) * 1000
        avgO2 = (o2/trials) * 1000
        avgO3 = (o3/trials) * 1000
        avgPY = (py/trials) * 1000
        
        results['O1_'+n] = avgO1
        results['O2_'+n] = avgO2
        results['O3_'+n] = avgO3
        results['py_'+n] = avgPY
        
        
    sortedResults = sorted(results.items(), key=operator.itemgetter(1), reverse=True)
    
    for result in sortedResults:
        responseTime = result[1]
        item = result[0].split('_')
        description = item[0]
        size = item[1]
        
        print(description + ' ' + size + ' ' + str(responseTime))
        

if __name__ == '__main__':
    main() 